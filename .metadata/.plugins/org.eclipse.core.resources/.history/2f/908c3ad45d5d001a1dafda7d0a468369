package com.example.demo.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.example.demo.entity.User;
import com.example.demo.service.UserService;

@RestController
@RequestMapping("/ria")
public class UserContoller {

	@Autowired
	UserService userService;
	
	@Autowired
	RestTemplate restTemplate;


	//	@RequestMapping(path = "/getUser/{id}", produces = "application/json")
	//	@ResponseBody
	//	public User getUser(@PathVariable("id") int id) {
	//		User user = new User();
	//		user = userService.getUser(id);
	//		return user;
	//		
	//	}



	@RequestMapping(value = "/user/{id}", method = RequestMethod.GET)
	public ResponseEntity<User> getUser(@PathVariable("id") int id) {

		User user = userService.getUser(id);
		if (user == null) {
			System.out.println("User with id " + id + " not found");
			return new ResponseEntity<User>(HttpStatus.NOT_FOUND);
		}
		return new ResponseEntity<User>(user, HttpStatus.OK);
	}

	//	@RequestMapping(path = "/getList", produces = "application/json")
	//	@ResponseBody
	//	public List<User> getList(){
	//		List<User> list = new ArrayList<>();
	//		list = userService.getUser();
	//		return list;
	//
	//	}

	@RequestMapping(value = "/user", method = RequestMethod.GET)
	public ResponseEntity<List<User>> listAllUsers() {
		List<User> users = userService.getUser();
		if(users.isEmpty()){
			return new ResponseEntity<List<User>>(HttpStatus.NO_CONTENT);
		}
		return new ResponseEntity<List<User>>(users, HttpStatus.OK);
	}


	//	@PostMapping("/user")
	//	public void addUser(@RequestBody User user) {
	//		userService.saveUser(user);
	//	}
	//
	@RequestMapping(value = "/user", method = RequestMethod.POST)
	public ResponseEntity<Void> createUser(@RequestBody User user) {
		if (userService.isUserExist(user)) {
			return new ResponseEntity<Void>(HttpStatus.CONFLICT);
		}
		
		userService.saveUser(user);
		return new ResponseEntity<Void>(HttpStatus.CREATED);
	}

	@RequestMapping("/{city}")
	public ResponseEntity<Object> getWeather(@PathVariable("city") String city){
		
		Object weather = restTemplate.getForObject(
				"http://api.openweathermap.org/data/2.5/weather?q=London&appid=84fdba1195edf769660daa80cc547774"
				, Object.class);
		return new ResponseEntity<Object>( weather, HttpStatus.OK);
	}
	






}
